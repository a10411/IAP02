<?xml version='1.0' encoding='utf-8'?>
<scheme version="2.0" title="" description="">
	<nodes>
		<node id="0" name="k-Means" qualified_name="Orange.widgets.unsupervised.owkmeans.OWKMeans" project_name="Orange3" version="" title="k-Means" position="(550.0, 411.0)" />
		<node id="1" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="CSV File Import" position="(219.0, 378.0)" />
		<node id="2" name="Scatter Plot" qualified_name="Orange.widgets.visualize.owscatterplot.OWScatterPlot" project_name="Orange3" version="" title="Scatter Plot" position="(719.0, 393.0)" />
		<node id="3" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script" position="(323.0, 248.0)" />
		<node id="4" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="CSV File Import (1)" position="(372.0, 403.0)" />
	</nodes>
	<links>
		<link id="0" source_node_id="0" sink_node_id="2" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="1" source_node_id="1" sink_node_id="3" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="2" source_node_id="4" sink_node_id="0" source_channel="Data" sink_channel="Data" enabled="true" />
	</links>
	<annotations />
	<thumbnail />
	<node_properties>
		<properties node_id="0" format="literal">{'auto_commit': True, 'controlAreaVisible': True, 'k': 3, 'k_from': 2, 'k_to': 8, 'max_iterations': 300, 'n_init': 10, 'normalize': True, 'optimize_k': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02\xd1\x00\x00\x01Y\x00\x00\x04\x99\x00\x00\x02\x91\x00\x00\x02\xd2\x00\x00\x01x\x00\x00\x04\x98\x00\x00\x02\x90\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x02\xd2\x00\x00\x01x\x00\x00\x04\x98\x00\x00\x02\x90', 'selection': None, 'smart_init': 0, '__version__': 2}</properties>
		<properties node_id="1" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/toxic/Documents/IPCA/3ano/1S/IA/IA_MachineLearning/IAP02/Covid Data.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 21, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/Users/toxic/Documents/IPCA/3ano/1S/IA/IA_MachineLearning/IAP02/CovidData1000.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 21, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/toxic/Documents/IPCA/3ano/1S/IA/IA_MachineLearning/IAP02', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x034\x00\x00\x01K\x00\x00\x04K\x00\x00\x02\x9f\x00\x00\x035\x00\x00\x01j\x00\x00\x04J\x00\x00\x02\x9e\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x035\x00\x00\x01j\x00\x00\x04J\x00\x00\x02\x9e', '__version__': 3}</properties>
		<properties node_id="2" format="pickle">gASVaAUAAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMC2F1dG9fc2FtcGxllIiMEmNvbnRyb2xBcmVh
VmlzaWJsZZSIjBNzYXZlZFdpZGdldEdlb21ldHJ5lENCAdnQywADAAAAAAGJAAAAgwAABfYAAANm
AAABigAAAKIAAAX1AAADZQAAAAAAAAAAB4AAAAGKAAAAogAABfUAAANllIwJc2VsZWN0aW9ulE6M
EXRvb2x0aXBfc2hvd3NfYWxslIiMD3Zpc3VhbF9zZXR0aW5nc5R9lIwFZ3JhcGiUfZQojAthbHBo
YV92YWx1ZZRLgIwNY2xhc3NfZGVuc2l0eZSJjBFqaXR0ZXJfY29udGludW91c5SJjAtqaXR0ZXJf
c2l6ZZRLAIwTbGFiZWxfb25seV9zZWxlY3RlZJSJjBZvcnRob25vcm1hbF9yZWdyZXNzaW9ulImM
C3BvaW50X3dpZHRolEsKjAlzaG93X2dyaWSUiIwLc2hvd19sZWdlbmSUiIwNc2hvd19yZWdfbGlu
ZZSJdYwLX192ZXJzaW9uX1+USwWMEGNvbnRleHRfc2V0dGluZ3OUXZQojBVvcmFuZ2V3aWRnZXQu
c2V0dGluZ3OUjAdDb250ZXh0lJOUKYGUfZQojAZ2YWx1ZXOUfZQojAphdHRyX2NvbG9ylIwHQ2x1
c3RlcpRLZYaUjAphdHRyX2xhYmVslE5K/v///4aUjAphdHRyX3NoYXBllE5K/v///4aUjAlhdHRy
X3NpemWUTkr+////hpSMBmF0dHJfeJSMCURBVEVfRElFRJRLaIaUjAZhdHRyX3mUjANBR0WUS2aG
lGgKfZRoFksFdYwKYXR0cmlidXRlc5R9lCiMBVVTTUVSlEsBjAxNRURJQ0FMX1VOSVSUSwKMA1NF
WJRLAYwMUEFUSUVOVF9UWVBFlEsBjAlEQVRFX0RJRUSUSwSMB0lOVFVCRUSUSwKMCVBORVVNT05J
QZRLAowDQUdFlEsCjAhQUkVHTkFOVJRLAowIRElBQkVURVOUSwKMBENPUESUSwKMBkFTVEhNQZRL
AowHSU5NU1VQUpRLAowMSElQRVJURU5TSU9OlEsCjA1PVEhFUl9ESVNFQVNFlEsCjA5DQVJESU9W
QVNDVUxBUpRLAowHT0JFU0lUWZRLAowNUkVOQUxfQ0hST05JQ5RLAowHVE9CQUNDT5RLAowUQ0xB
U0lGRklDQVRJT05fRklOQUyUSwKMA0lDVZRLAnWMBW1ldGFzlH2UKGghSwGMClNpbGhvdWV0dGWU
SwJ1dWJoGymBlH2UKGgefZQoaCBoSUtmhpRoI05K/v///4aUaCVOSv7///+GlGgnTkr+////hpRo
KYwJREFURV9ESUVElEtlhpRoLIwDQUdFlEtmhpRoCn2UaBZLBXVoMH2UKIwFVVNNRVKUSwGMDE1F
RElDQUxfVU5JVJRLAowDU0VYlEsBjAxQQVRJRU5UX1RZUEWUSwGMCURBVEVfRElFRJRLAYwHSU5U
VUJFRJRLAowJUE5FVU1PTklBlEsCjANBR0WUSwKMCFBSRUdOQU5UlEsCjAhESUFCRVRFU5RLAowE
Q09QRJRLAowGQVNUSE1BlEsCjAdJTk1TVVBSlEsCjAxISVBFUlRFTlNJT06USwKMDU9USEVSX0RJ
U0VBU0WUSwKMDkNBUkRJT1ZBU0NVTEFSlEsCjAdPQkVTSVRZlEsCjA1SRU5BTF9DSFJPTklDlEsC
jAdUT0JBQ0NPlEsCjBRDTEFTSUZGSUNBVElPTl9GSU5BTJRLAowDSUNVlEsCdWhHfZQojAdDbHVz
dGVylEsBjApTaWxob3VldHRllEsCdXViZXUu
</properties>
		<properties node_id="3" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 1, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf8\x00\x00\x07\x80\x00\x00\x04\x08\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x07\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x07', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import numpy as np\nfrom Orange.data import Table, Domain, ContinuousVariable, DiscreteVariable\n\ndomain = Domain([ContinuousVariable("age"),\n                 ContinuousVariable("height"),\n                 DiscreteVariable("gender", values=("M", "F"))])\narr = np.array([\n  [25, 186, 0],\n  [30, 164, 1]])\nout_data = Table.from_numpy(domain, arr)\n', 'filename': None}, {'name': 'null and date', 'script': "import numpy as np\nimport pandas as pd\n\n# read the csv file into a dataframe\ndf = pd.read_csv('CovidData1000.csv')\n\n# loop through all columns in the dataframe\nfor col in df.columns:\n    # use np.where to replace values of 97 and 99 with None\n    df[col] = np.where(df[col] == 97, None, df[col])\n    df[col] = np.where(df[col] == 99, None, df[col])\n    df[col] = np.where(df[col] == '9999-99-99', None,df[col])\n\n# save the modified dataframe to a new csv file\ndf.to_csv('CovidData1000test.csv', index=False)\n", 'filename': None}, {'name': 'date', 'script': "import numpy as np\nimport pandas as pd\n\n# read the csv file into a dataframe\ndf = pd.read_csv('CovidData1000.csv')\n\n# loop through all columns in the dataframe\nfor col in df.columns:\n    # use np.where to replace values of 97 and 99 with None\n    df[col] = np.where(df[col] == 9999-99-99, None,df[col])\n\n# save the modified dataframe to a new csv file\ndf.to_csv('CovidData1000test.csv', index=False)\n", 'filename': None}], 'scriptText': "import numpy as np\nimport pandas as pd\n\n# read the csv file into a dataframe\ndf = pd.read_csv('CovidData1000.csv')\n\n# loop through all columns in the dataframe\nfor col in df.columns:\n    # use np.where to replace values of 97 and 99 with None\n    df[col] = np.where(df[col] == 97, None, df[col])\n    df[col] = np.where(df[col] == 99, None, df[col])\n    df[col] = np.where(df[col] == '9999-99-99', None,df[col])\n\n# save the modified dataframe to a new csv file\ndf.to_csv('CovidData1000test.csv', index=False)\n", 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x9d\x00\x00\x00^\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="4" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/toxic/Documents/IPCA/3ano/1S/IA/IA_MachineLearning/IAP02/CovidData1000test.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 21, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/toxic/Documents/IPCA/3ano/1S/IA/IA_MachineLearning/IAP02', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x034\x00\x00\x01K\x00\x00\x04K\x00\x00\x02\x9f\x00\x00\x035\x00\x00\x01j\x00\x00\x04J\x00\x00\x02\x9e\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x035\x00\x00\x01j\x00\x00\x04J\x00\x00\x02\x9e', '__version__': 3}</properties>
	</node_properties>
	<session_state>
		<window_groups />
	</session_state>
</scheme>
